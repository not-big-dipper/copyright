services:
  qdrant_db:
    image: qdrant/qdrant:latest
    ports:
      - "0.0.0.0:6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
      - ./data/qdrant:/qdrant/storage
    env_file:
      - .env

  frontend:
    build: 
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "80:5173"
    depends_on:
      - qdrant_db
    env_file:
      - .env

  pocket_db:
    build: ./pocketbase/
    ports:
      - "0.0.0.0:8080:8080"
    volumes:
      - pocket_data:/pb/pb_data
      - ./data/pocket:/pb/pb_data

  pocket_db_setup:
    image: alpine/curl
    restart: "no"
    env_file:
      - .env
    entrypoint: >
      curl -X POST http://$DATABASE_URL:8080/api/admins --header 'Content-Type: application/json' -d '{"email": "'"$PB_ADMIN_USER"'", "password": "'"$PB_ADMIN_PASS"'", "passwordConfirm": "'"$PB_ADMIN_PASS"'"}'
    depends_on:
      - pocket_db

  compute:
    build: ./compute
    ports:
      - "8000:8001"
    depends_on:
      - pocket_db
      - audio_db
      - pocket_db_setup
    env_file:
      - .env
    volumes:
      - malevich_data:/malevich
      - ./data/malevich:/malevich
    entrypoint: uvicorn api.app:app --host 0.0.0.0 --port 8001 --workers 8

  compute2:
    build: ./compute
    ports:
      - "8002:8002"
    depends_on:
      - pocket_db
      - audio_db
      - pocket_db_setup
    env_file:
      - .env
    volumes:
      - ./compute/api:/app/api
    entrypoint: uvicorn api.app:app --host 0.0.0.0 --port 8002 --reload

  audio_db:
    image: postgres
    env_file:
      - .env
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
    - audio_data:/var/lib/postgresql
    - ./data/audio:/var/lib/postgresql

volumes:
  qdrant_data:
  pocket_data:
  malevich_data:
  audio_data: